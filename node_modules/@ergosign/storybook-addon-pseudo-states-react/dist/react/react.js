"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withPseudo = void 0;
var react_1 = __importStar(require("react"));
var addons_1 = require("@storybook/addons");
var core_events_1 = require("@storybook/core-events");
var constants_1 = require("../share/constants");
var types_1 = require("../share/types");
var events_1 = require("../share/events");
var utils_1 = require("../share/utils");
var AttributeStatesObj_1 = require("../share/AttributeStatesObj");
var PermutationsStatesObj_1 = require("../share/PermutationsStatesObj");
var styles_1 = require("../share/styles");
function pseudoStateFn(getStory, context, settings) {
    var e_1, _a;
    var _b, _c;
    var story = getStory(context);
    var channel = addons_1.addons.getChannel();
    var options = settings === null || settings === void 0 ? void 0 : settings.options;
    var parameters = (settings === null || settings === void 0 ? void 0 : settings.parameters) || {};
    var addonDisabled = ((_b = settings === null || settings === void 0 ? void 0 : settings.parameters) === null || _b === void 0 ? void 0 : _b.disabled) || false;
    channel.emit(events_1.SAPS_INIT_PSEUDO_STATES, addonDisabled);
    var globallyDisabled = sessionStorage.getItem(constants_1.ADDON_GLOBAL_DISABLE_STATE) === 'true';
    var _d = __read(react_1.useState(globallyDisabled), 2), isStoryDisabled = _d[0], setIsStoryDisabled = _d[1];
    if (addonDisabled) {
        return story;
    }
    var selector = ((_c = settings === null || settings === void 0 ? void 0 : settings.parameters) === null || _c === void 0 ? void 0 : _c.selector) || null;
    parameters.pseudos =
        (parameters === null || parameters === void 0 ? void 0 : parameters.pseudos) || (options === null || options === void 0 ? void 0 : options.pseudos) || types_1.PseudoStatesDefault;
    parameters.attributes =
        (parameters === null || parameters === void 0 ? void 0 : parameters.attributes) || (options === null || options === void 0 ? void 0 : options.attributes) || types_1.AttributesStatesDefault;
    var permutationsAsObject = [];
    if (parameters.permutations) {
        permutationsAsObject = __spread(parameters === null || parameters === void 0 ? void 0 : parameters.permutations).map(function (item) {
            return PermutationsStatesObj_1.PermutationStatsObj.fromPermutationState(item);
        });
    }
    var attributesAsObject = __spread(parameters === null || parameters === void 0 ? void 0 : parameters.attributes).map(function (item) { return AttributeStatesObj_1.AttributeStatesObj.fromAttributeState(item); });
    parameters.prefix =
        (parameters === null || parameters === void 0 ? void 0 : parameters.prefix) || (options === null || options === void 0 ? void 0 : options.prefix) || types_1.PseudoStatesDefaultPrefix;
    var states = [];
    states.push({
        name: 'Normal',
        pseudos: parameters.pseudos,
        states: createPseudos(story, parameters.pseudos, attributesAsObject),
    });
    try {
        for (var permutationsAsObject_1 = __values(permutationsAsObject), permutationsAsObject_1_1 = permutationsAsObject_1.next(); !permutationsAsObject_1_1.done; permutationsAsObject_1_1 = permutationsAsObject_1.next()) {
            var permutation = permutationsAsObject_1_1.value;
            states.push({
                name: permutation.label || permutation.attr,
                pseudos: parameters.pseudos,
                permutation: permutation,
                states: createPseudos(story, parameters.pseudos, attributesAsObject, permutation),
            });
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (permutationsAsObject_1_1 && !permutationsAsObject_1_1.done && (_a = permutationsAsObject_1.return)) _a.call(permutationsAsObject_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    var applyPseudoStateToHost = function (pseudoState, containerTmp, selectorTmp, permutation) {
        var e_2, _a, e_3, _b;
        var host;
        if (!selectorTmp) {
            host = containerTmp.children[0];
        }
        else if (typeof selectorTmp === 'string') {
            host = containerTmp.querySelector(selectorTmp);
        }
        else if (Array.isArray(selectorTmp)) {
            try {
                for (var _c = __values(selectorTmp), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var s = _d.value;
                    applyPseudoStateToHost(pseudoState, containerTmp, s, permutation);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        var moduleClass = null;
        if (host === null || host === void 0 ? void 0 : host.classList[0]) {
            moduleClass = host === null || host === void 0 ? void 0 : host.classList[0].match(/(.+?)?__/);
        }
        var cssModulePrefix = '';
        if (moduleClass && (moduleClass === null || moduleClass === void 0 ? void 0 : moduleClass.length) >= 1) {
            cssModulePrefix = moduleClass[1] + "__";
        }
        var subPseudoStates = utils_1.getMixedPseudoStates(pseudoState);
        if (permutation) {
            subPseudoStates.concat([permutation.attr]);
        }
        try {
            for (var subPseudoStates_1 = __values(subPseudoStates), subPseudoStates_1_1 = subPseudoStates_1.next(); !subPseudoStates_1_1.done; subPseudoStates_1_1 = subPseudoStates_1.next()) {
                var s = subPseudoStates_1_1.value;
                host === null || host === void 0 ? void 0 : host.classList.add("" + cssModulePrefix + parameters.prefix + s.trim());
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (subPseudoStates_1_1 && !subPseudoStates_1_1.done && (_b = subPseudoStates_1.return)) _b.call(subPseudoStates_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    var updatePseudoStates = function () {
        var e_4, _a;
        var _b;
        if (parameters.pseudos) {
            var _loop_1 = function (state) {
                var e_5, _a;
                var _loop_2 = function (pstateRaw) {
                    var pstate = utils_1.sanitizePseudoName(pstateRaw);
                    var containers = document.querySelectorAll(".pseudo-states-addon__story--" + pstate + " .pseudo-states-addon__story__container");
                    if (containers && containers.length > 0) {
                        containers.forEach(function (container) {
                            if (container) {
                                applyPseudoStateToHost(pstateRaw, container, selector, state.permutation);
                            }
                        });
                    }
                };
                try {
                    for (var _b = (e_5 = void 0, __values((_b = state.pseudos) !== null && _b !== void 0 ? _b : [])), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var pstateRaw = _c.value;
                        _loop_2(pstateRaw);
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
            };
            try {
                for (var states_1 = __values(states), states_1_1 = states_1.next(); !states_1_1.done; states_1_1 = states_1.next()) {
                    var state = states_1_1.value;
                    _loop_1(state);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (states_1_1 && !states_1_1.done && (_a = states_1.return)) _a.call(states_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    channel.once(core_events_1.STORY_RENDERED, function () {
        updatePseudoStates();
    });
    var clickHandler = function (value) {
        setIsStoryDisabled(value);
        updatePseudoStates();
    };
    channel.removeAllListeners(events_1.SAPS_BUTTON_CLICK);
    channel.addListener(events_1.SAPS_BUTTON_CLICK, clickHandler);
    channel.once(core_events_1.STORY_CHANGED, function () {
        channel.removeAllListeners(events_1.SAPS_BUTTON_CLICK);
    });
    var numberOfPseudos = parameters.pseudos ? parameters.pseudos.length : 0;
    var numberOfAttributes = parameters.attributes
        ? parameters.attributes.length
        : 0;
    var getGridStyles = function () {
        switch (parameters.styles) {
            case types_1.Orientation.ROW:
                return {
                    gridTemplateRows: "repeat(" + (1 + permutationsAsObject.length) + ", min-content)",
                    gridTemplateColumns: "repeat(" + (1 + numberOfPseudos + numberOfAttributes) + ", max-content)",
                    gridAutoFlow: 'row',
                };
            case types_1.Orientation.COLUMN:
            default:
                return {
                    gridTemplateRows: "repeat(" + (1 + numberOfPseudos + numberOfAttributes) + ", min-content)",
                    gridTemplateColumns: "repeat(" + (1 + permutationsAsObject.length) + ", min-content)",
                    gridAutoFlow: 'column',
                };
        }
    };
    return isStoryDisabled ? (story) : (react_1.default.createElement("div", { className: "pseudo-states-addon__container", style: __assign(__assign({}, styles_1.styles.gridContainer), getGridStyles()) }, states.map(function (state) {
        var _a;
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement("div", { className: "pseudo-states-addon__story pseudo-states-addon__story--" + state.name },
                react_1.default.createElement("div", { className: "pseudo-states-addon__story__header" },
                    state.name,
                    ":"),
                react_1.default.createElement("div", { className: "pseudo-states-addon__story__container" }, react_1.default.cloneElement(story, state.permutation
                    ? (_a = {},
                        _a[state.permutation.attr] = state.permutation.value,
                        _a) : {}))),
            state.states));
    })));
}
var createPseudos = function (story, pseudos, attributesAsObject, permutation) {
    var e_6, _a, _b, _c, e_7, _d, _e, _f;
    var states = [];
    if (pseudos) {
        try {
            for (var pseudos_1 = __values(pseudos), pseudos_1_1 = pseudos_1.next(); !pseudos_1_1.done; pseudos_1_1 = pseudos_1.next()) {
                var state = pseudos_1_1.value;
                var pstate = utils_1.sanitizePseudoName(state);
                var storyState = __assign(__assign({}, story), { props: permutation
                        ? __assign(__assign({}, story.props), (_b = {}, _b[state] = true, _b[permutation.attr] = permutation.value, _b)) : __assign(__assign({}, story.props), (_c = {}, _c[state] = true, _c)) });
                var pseudoStoryPart = (react_1.default.createElement("div", { className: "pseudo-states-addon__story pseudo-states-addon__story--" + pstate, key: "pseudo-" + pstate },
                    react_1.default.createElement("div", { className: "pseudo-states-addon__story__header" },
                        state,
                        ":"),
                    react_1.default.createElement("div", { className: "pseudo-states-addon__story__container" }, storyState)));
                states.push(pseudoStoryPart);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (pseudos_1_1 && !pseudos_1_1.done && (_a = pseudos_1.return)) _a.call(pseudos_1);
            }
            finally { if (e_6) throw e_6.error; }
        }
        if (attributesAsObject) {
            try {
                for (var attributesAsObject_1 = __values(attributesAsObject), attributesAsObject_1_1 = attributesAsObject_1.next(); !attributesAsObject_1_1.done; attributesAsObject_1_1 = attributesAsObject_1.next()) {
                    var attr = attributesAsObject_1_1.value;
                    var storyState = __assign(__assign({}, story), { props: permutation
                            ? __assign(__assign({}, story.props), (_e = {}, _e[attr.attr] = attr.value, _e[permutation.attr] = permutation.value, _e)) : __assign(__assign({}, story.props), (_f = {}, _f[attr.attr] = attr.value, _f)) });
                    states.push(react_1.default.createElement("div", { className: "pseudo-states-addon__story pseudo-states-addon__story--attr-" + attr.attr, key: "attr-" + attr.attr },
                        react_1.default.createElement("div", { className: "pseudo-states-addon__story__header" },
                            attr.attr,
                            ":"),
                        react_1.default.createElement("div", { className: "pseudo-states-addon__story__container" }, storyState)));
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (attributesAsObject_1_1 && !attributesAsObject_1_1.done && (_d = attributesAsObject_1.return)) _d.call(attributesAsObject_1);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
    }
    return states;
};
exports.withPseudo = addons_1.makeDecorator(__assign(__assign({}, constants_1.addonParameters), { wrapper: function (getStory, context, settings) {
        return pseudoStateFn(getStory, context, settings);
    } }));
if (module && module.hot && module.hot.decline) {
    module.hot.decline();
}
exports.default = exports.withPseudo;
//# sourceMappingURL=react.js.map